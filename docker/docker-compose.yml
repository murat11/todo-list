version: '2'
services:
  nodejs:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    volumes:
      - "../public:/srv/app/public"
    labels:
      name: "Node JS"
    working_dir: "/srv/app/public"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - "../:/srv/app"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
    labels:
      name: "Web Server"
    depends_on:
      - php
      - mysql-dev

  php:
    build:
        context: ./php
        dockerfile: Dockerfile
    volumes:
      - "../:/srv/app"
    ports:
      - "9000"
    working_dir: "/srv/app"
    environment:
      PHP_IDE_CONFIG: "serverName=APP"

  mysql-dev:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    ports:
      - "3307:3306"
    labels:
      name: "Dev Database"
    volumes:
      - "./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./mysql/my.cnf:/etc/mysql/my.cnf:ro"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: app_dev

  mysql-test:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    ports:
      - "3308:3306"
    labels:
      name: "Test Database"
    volumes:
      - "./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./mysql/my.cnf:/etc/mysql/my.cnf:ro"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: app_test

